name: Unit Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests-ubuntu:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run Unit Tests
      run: dotnet test PushDeliveredQueue.UnitTests --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage-results/
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results-ubuntu-${{ matrix.dotnet-version }}
        path: ./coverage-results/
        retention-days: 30
        
    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:./coverage-results/**/coverage.cobertura.xml -targetdir:./coverage-report -reporttypes:HtmlInline_AzurePipelines;Cobertura
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-coverage-ubuntu-${{ matrix.dotnet-version }}
        path: ./coverage-report/
        retention-days: 30

  unit-tests-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run Unit Tests
      run: dotnet test PushDeliveredQueue.UnitTests --no-build --verbosity normal --configuration Release
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results-windows-${{ matrix.dotnet-version }}
        path: ./TestResults/
        retention-days: 30
